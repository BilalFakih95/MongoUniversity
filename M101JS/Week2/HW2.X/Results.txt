2.1 Homework: Multiple selectors in a find() command

What is the title of the movie, rated PG-13 and released in 2013 that won no awards? Copy and paste the title from the document in our movieDetails collection. In your answer, do NOT include the quotes that surround the movie title as it is displayed in the Mongo shell.

NOTE: There is a dump of the video database included in the handouts for the "Creating Documents" lesson. Use that data to answer this question.

		X Sol: A Decade of Decadence, Pt. 2: Legacy of Dreams

2.2 Homework: Arrays with nested documents

Suppose our movie details documents are structured so that rather than contain an awards field that looks like this:


    "awards" : {
        "wins" : 56,
        "nominations" : 86,
        "text" : "Won 2 Oscars. Another 56 wins and 86 nominations."
    }

they are structured with an awards field as follows:
    "awards" : {
        "oscars" : [
            {"award": "bestAnimatedFeature", "result": "won"},
            {"award": "bestMusic", "result": "won"},
            {"award": "bestPicture", "result": "nominated"},
            {"award": "bestSoundEditing", "result": "nominated"},
            {"award": "bestScreenplay", "result": "nominated"}
        ],
        "wins" : 56,
        "nominations" : 86,
        "text" : "Won 2 Oscars. Another 56 wins and 86 nominations."
    }
We often refer to the selection criteria passed as the first argument to find() as a "query document". What query document would we use in a find() command to return all movies in the video.movieDetails collection that either won or were nominated for best picture? You may assume that an award will appear in the "oscars" array only if the movie won or was nominated. Enter the query document in the box below. Please use double quotes around any keys in the query document.

HINT: For this question we are looking for the simplest query that will work. This problem has a very straightforward solution using something discussed in the "Reading Documents" video.

		X Sol:

2.3 Homework: Simple projection

What document would you include as the second argument to a call to find() in order to project the title of each query result and only the title? Please include double quotes around the keys in your projection document.

NOTE: There is a dump of the video database included in the handouts for the "Creating Documents" lesson. Use that data to answer this question.

		X Sol: {title:1, _id: 0}

2.4 Homework: Matching a specific array element

What is the title of the first movie returned for a query that selects all movies listing "Sweden" second among countries of origin. Please copy and paste the title from the document in which it appears. Do not include the quotes around the title in your answer. (You may want to use the limit() method to restrict the returned documents to just the first one. See the MongoDB documentation for details.)

NOTE: There is a dump of the video database included in the handouts for the "Creating Documents" lesson. Use that data to answer this question.

		X Sol: The Girl with the Dragon Tattoo

2.5 Homework: Equality queries on arrays

How many documents in our movieDetails collection are listed as falling into just the following two genres: "Comedy" and "Crime" with "Comedy" listed first.

NOTE: There is a dump of the video database included in the handouts for the "Creating Documents" lesson. Use that data to answer this question.

0
9
14
X 20
33
47
62
101
122
205

2.6 Homework: Array operators

As a follow up to the previous question, how many documents in the movieDetails collection list both "Comedy" and "Crime" as genres regardless of how many other genres are listed?

NOTE: There is a dump of the video database included in the handouts for the "Creating Documents" lesson. Use that data to answer this question.


13
29
44
X 56
82
109
248
476
500
514